(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./docs/slider.mdx":function(e,n,a){"use strict";a.r(n);var r=a("./node_modules/react/index.js"),t=a.n(r),i=a("./node_modules/@mdx-js/tag/dist/index.js"),l=a("./node_modules/docz/dist/index.m.js"),o=a("./packages/ui-dom/components/Slider/index.js"),m=a.n(o),c=a("./packages/ui-dom/components/View/index.js"),d=a.n(c),s=a("./packages/ui-dom/components/Row/index.js"),p=a.n(s),g=a("./packages/ui-dom/components/Text/index.js"),u=a.n(g),b=function(e){var n=e.children;return t.a.createElement(p.a,{bg:"white",width:60,height:30,justifyContent:"center",alignItems:"center",style:{borderRadius:4,borderWidth:1,borderColor:"#f50057",marginBottom:5,transform:[{translateX:-30}]}},t.a.createElement(u.a,{fontSize:"small",color:"pink"},n))};function k(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}b.__docgenInfo={description:"",methods:[],displayName:"MarkerLabel"};n.default=function(e){var n=e.components,a=k(e,["components"]);return t.a.createElement(i.MDXTag,{name:"wrapper",components:n},t.a.createElement(i.MDXTag,{name:"h1",components:n,props:{id:"slider"}},"Slider"),t.a.createElement(i.MDXTag,{name:"p",components:n},"Slider component."),t.a.createElement(i.MDXTag,{name:"h2",components:n,props:{id:"basic-usage"}},"Basic usage"),t.a.createElement(l.Playground,{__position:0,__code:'<View m={4}>\n  <Slider\n    onChange={console.log}\n    range={[0, 1]}\n    initialValue={{\n      min: 0,\n      max: 1,\n    }}\n  >\n    <Slider.Marker name="min" />\n    <Slider.Marker name="max" />\n  </Slider>\n</View>',__scope:{props:a,Slider:m.a,View:d.a,MarkerLabel:b}},t.a.createElement(d.a,{m:4},t.a.createElement(m.a,{onChange:console.log,range:[0,1],initialValue:{min:0,max:1}},t.a.createElement(m.a.Marker,{name:"min"}),t.a.createElement(m.a.Marker,{name:"max"})))),t.a.createElement(i.MDXTag,{name:"h2",components:n,props:{id:"fixed-width"}},"Fixed width"),t.a.createElement(l.Playground,{__position:1,__code:'<View m={4}>\n  <Slider\n    width={200}\n    onChange={console.log}\n    range={[0, 1]}\n    initialValue={{\n      min: 0,\n      max: 1,\n    }}\n  >\n    <Slider.Marker name="min" />\n    <Slider.Marker name="max" />\n  </Slider>\n</View>',__scope:{props:a,Slider:m.a,View:d.a,MarkerLabel:b}},t.a.createElement(d.a,{m:4},t.a.createElement(m.a,{width:200,onChange:console.log,range:[0,1],initialValue:{min:0,max:1}},t.a.createElement(m.a.Marker,{name:"min"}),t.a.createElement(m.a.Marker,{name:"max"})))),t.a.createElement(i.MDXTag,{name:"h2",components:n,props:{id:"track-and-marker-styles"}},"Track and marker styles"),t.a.createElement(l.Playground,{__position:2,__code:"<View mb=\"25px\">\n  <Slider\n    range={[0, 1]}\n    initialValue={1 / 2}\n    trackProps={{ bg: 'lightGrey' }}\n  >\n    <Slider.Marker trackProps={{ height: 4, bg: 'pink' }} />\n  </Slider>\n</View>\n<View mb=\"25px\">\n  <Slider\n    range={[0, 1]}\n    initialValue={[1 / 4, 3 / 4]}\n    trackProps={{ bg: 'lightGrey' }}\n  >\n    <View\n      bg=\"pink\"\n      width={25}\n      height={25}\n      borderRadius={5}\n      trackProps={{ bg: 'pink' }}\n    />\n    <View\n      bg=\"blue\"\n      width={25}\n      height={25}\n      borderRadius={5}\n      trackProps={{ bg: 'blue' }}\n    />\n  </Slider>\n</View>",__scope:{props:a,Slider:m.a,View:d.a,MarkerLabel:b}},t.a.createElement(d.a,{mb:"25px"},t.a.createElement(m.a,{range:[0,1],initialValue:.5,trackProps:{bg:"lightGrey"}},t.a.createElement(m.a.Marker,{trackProps:{height:4,bg:"pink"}}))),t.a.createElement(d.a,{mb:"25px"},t.a.createElement(m.a,{range:[0,1],initialValue:[.25,.75],trackProps:{bg:"lightGrey"}},t.a.createElement(d.a,{bg:"pink",width:25,height:25,borderRadius:5,trackProps:{bg:"pink"}}),t.a.createElement(d.a,{bg:"blue",width:25,height:25,borderRadius:5,trackProps:{bg:"blue"}})))),t.a.createElement(i.MDXTag,{name:"h2",components:n,props:{id:"marker-labels"}},"Marker labels"),t.a.createElement(l.Playground,{__position:3,__code:'<View flexDirection="column">\n  <Slider range={[0, 100]} initialValue={[0, 100]}>\n    <Slider.Marker\n      renderLabel={({ value }) => (\n        <MarkerLabel>{value.toFixed(2)}</MarkerLabel>\n      )}\n    />\n    <Slider.Marker\n      renderLabel={({ value }) => (\n        <MarkerLabel>{value.toFixed(2)}</MarkerLabel>\n      )}\n    />\n  </Slider>\n</View>',__scope:{props:a,Slider:m.a,View:d.a,MarkerLabel:b}},t.a.createElement(d.a,{flexDirection:"column"},t.a.createElement(m.a,{range:[0,100],initialValue:[0,100]},t.a.createElement(m.a.Marker,{renderLabel:function(e){var n=e.value;return t.a.createElement(b,null,n.toFixed(2))}}),t.a.createElement(m.a.Marker,{renderLabel:function(e){var n=e.value;return t.a.createElement(b,null,n.toFixed(2))}})))))}}}]);
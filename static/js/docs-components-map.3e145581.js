(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"./docs/components/map.mdx":function(t,e,n){"use strict";n.r(e);var o=n("./node_modules/react/index.js"),l=n.n(o),r=n("./node_modules/@mdx-js/tag/dist/index.js"),a=n("./node_modules/docz/dist/index.m.js"),i=n("./packages/ui-dom/components/View/index.js"),d=n.n(i),s=n("./packages/ui-dom/components/Map/index.js"),u=n.n(s),c=n("./packages/ui-dom/components/Icon/index.js"),p=n.n(c),g=n("./docs/components/markers.json");function f(t,e){if(null==t)return{};var n,o,l=function(t,e){if(null==t)return{};var n,o,l={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}e.default=function(t){var e=t.components,n=f(t,["components"]);return l.a.createElement(r.MDXTag,{name:"wrapper",components:e},l.a.createElement(r.MDXTag,{name:"h1",components:e,props:{id:"map"}},"Map"),l.a.createElement(r.MDXTag,{name:"p",components:e},"Map component."),l.a.createElement(r.MDXTag,{name:"h2",components:e,props:{id:"basic-usage"}},"Basic usage"),l.a.createElement(a.Playground,{__position:0,__code:'<View m={4} height={400}>\n  <Map apiKey={GOOGLE_MAPS_API_KEY}>\n    <View {...markers[0]} mt={-25}>\n      <Icon name="map-marker-alt" color="pink" size={25} />\n    </View>\n  </Map>\n</View>',__scope:{props:n,View:d.a,Map:u.a,Icon:p.a,markers:g,GOOGLE_MAPS_API_KEY:""}},l.a.createElement(d.a,{m:4,height:400},l.a.createElement(u.a,{apiKey:""},l.a.createElement(d.a,Object.assign({},g[0],{mt:-25}),l.a.createElement(p.a,{name:"map-marker-alt",color:"pink",size:25}))))),l.a.createElement(r.MDXTag,{name:"h2",components:e,props:{id:"cluster"}},"Cluster"),l.a.createElement(a.Playground,{__position:1,__code:"<View m={4} height={400}>\n  <Map\n    cluster\n    apiKey={GOOGLE_MAPS_API_KEY}\n    highlight={{ lat: markers[0].lat, lng: markers[0].lng }}\n    onChange={(bounds, listings) =>\n      console.log('onChange', { bounds, listings })\n    }\n  >\n    {markers.map(props => (\n      <Map.Marker\n        {...props}\n        key={props.id}\n        onSelect={() => console.log('onSelect', props.id)}\n      >\n        {String(props.text)}\n      </Map.Marker>\n    ))}\n  </Map>\n</View>",__scope:{props:n,View:d.a,Map:u.a,Icon:p.a,markers:g,GOOGLE_MAPS_API_KEY:""}},l.a.createElement(d.a,{m:4,height:400},l.a.createElement(u.a,{cluster:!0,apiKey:"",highlight:{lat:g[0].lat,lng:g[0].lng},onChange:function(t,e){return console.log("onChange",{bounds:t,listings:e})}},g.map(function(t){return l.a.createElement(u.a.Marker,Object.assign({},t,{key:t.id,onSelect:function(){return console.log("onSelect",t.id)}}),String(t.text))})))))}},"./docs/components/markers.json":function(t){t.exports=[{lat:-22.9608099,lng:-43.2096142,id:"101",text:6e5},{lat:-22.9833576,lng:-43.1998199,id:"312",text:117e4},{lat:-22.9711476,lng:-43.1845933,id:"128",text:119e4},{lat:-22.9390338,lng:-43.1745585,id:"259",text:18e5},{lat:-22.9528316,lng:-43.1769845,id:"65",text:86e4},{lat:-22.9819421,lng:-43.2389042,id:"72",text:14e5},{lat:-22.9430224,lng:-43.19151440000002,id:"89",text:88e4},{lat:-22.9815548,lng:-43.19424230000001,id:"117",text:85e4},{lat:-22.9527353,lng:-43.1677344,id:"190",text:17e5},{lat:-22.9755316,lng:-43.1925039,id:"346",text:7100100},{lat:-22.9565911,lng:-43.1786764,id:"86",text:87e4},{lat:-22.9783778,lng:-43.1894693,id:"227",text:12e5},{lat:-22.983671,lng:-43.195971,id:"201",text:75e4},{lat:-22.9622834,lng:-43.17716410000003,id:"68",text:156e4},{lat:-22.977617,lng:-43.225388,id:"322",text:195e4},{lat:-22.9796507,lng:-43.2204178,id:"267",text:11e5},{lat:-22.9868888,lng:-43.22706640000001,id:"24",text:41e5},{lat:-22.9398251,lng:-43.1780107,id:"76",text:103e4},{lat:-22.9315194,lng:-43.1819802,id:"17",text:475e4},{lat:-22.9401365,lng:-43.17981529999997,id:"10",text:113e4},{lat:-22.964473,lng:-43.193532300000015,id:"73",text:95e4},{lat:-22.9521841,lng:-43.190136300000006,id:"22",text:18e5},{lat:-22.9676447,lng:-43.183341799999994,id:"20",text:32e5},{lat:-22.9298234,lng:-43.18366600000002,id:"18",text:63e5},{lat:-22.9671543,lng:-43.20317490000002,id:"21",text:28e5},{lat:-22.964855,lng:-43.202516,id:"33",text:21e5},{lat:-22.95810179999999,lng:-43.17809299999999,id:"70",text:1035e3},{lat:-22.9775522,lng:-43.228355599999986,id:"7",text:201e4},{lat:-22.983607,lng:-43.227337000000034,id:"9",text:21e5},{lat:-22.9949306,lng:-43.275009599999976,id:"11",text:35e5},{lat:-22.984197,lng:-43.232776,id:"75",text:8e5},{lat:-22.9852005,lng:-43.2040217,id:"14",text:115e4},{lat:-22.9780911,lng:-43.2258137,id:"45",text:17e5},{lat:-22.940907,lng:-43.19132289999999,id:"16",text:85e4},{lat:-22.9489083,lng:-43.18400610000003,id:"25",text:165e4},{lat:-22.9606056,lng:-43.2013486,id:"39",text:38e5},{lat:-22.9777622,lng:-43.2279125,id:"23",text:21e5},{lat:-22.953479,lng:-43.18142260000002,id:"26",text:175e4},{lat:-22.9606056,lng:-43.2013486,id:"34",text:106e4},{lat:-22.9606056,lng:-43.2013486,id:"41",text:117e4},{lat:-22.941858,lng:-43.192853,id:"31",text:145e4},{lat:-22.9834622,lng:-43.192355899999995,id:"19",text:78e4},{lat:-22.9363508,lng:-43.1762839,id:"3",text:85e4},{lat:-22.9830535,lng:-43.21074709999999,id:"8",text:225e4},{lat:-22.9869688,lng:-43.22890540000003,id:"29",text:392e4},{lat:-22.983834,lng:-43.193774,id:"6",text:145e4},{lat:-22.9529669,lng:-43.19172259999999,id:"44",text:265e4},{lat:-22.9335162,lng:-43.1831869,id:"13",text:2e6},{lat:-22.9847552,lng:-43.231512699999996,id:"43",text:26e5},{lat:-22.9393772,lng:-43.19178420000003,id:"28",text:14e5},{lat:-22.937725,lng:-43.17785930000002,id:"27",text:94e4},{lat:-22.965372,lng:-43.18042890000004,id:"58",text:28e5},{lat:-22.9594502,lng:-43.2019129,id:"79",text:11e5},{lat:-22.9353967,lng:-43.1800132,id:"63",text:199e4},{lat:-22.927198,lng:-43.1754482,id:"61",text:99e4},{lat:-22.9695264,lng:-43.189977,id:"48",text:95e4},{lat:-22.937892,lng:-43.176018899999974,id:"50",text:295e4},{lat:-22.9677755,lng:-43.2037935,id:"64",text:1075e3},{lat:-22.972449,lng:-43.1906283,id:"62",text:73e4},{lat:-22.9598355,lng:-43.20344720000001,id:"55",text:236e4},{lat:-22.9753444,lng:-43.192375700000014,id:"36",text:79e4},{lat:-22.987151,lng:-43.231600000000014,id:"49",text:265e4},{lat:-22.9775617,lng:-43.19728040000001,id:"38",text:15e5},{lat:-22.9763192,lng:-43.19340310000001,id:"59",text:115e4},{lat:-22.9769635,lng:-43.19588090000002,id:"66",text:103e4},{lat:-22.937064,lng:-43.18301,id:"54",text:99e4},{lat:-22.9661014,lng:-43.21675540000001,id:"51",text:4e6},{lat:-22.9646223,lng:-43.22099109999999,id:"78",text:113e4},{lat:-22.983573,lng:-43.190094999999985,id:"60",text:147e4},{lat:-22.9560791,lng:-43.190205900000024,id:"84",text:12e5},{lat:-22.9569151,lng:-43.19849629999999,id:"56",text:82e4},{lat:-22.9259373,lng:-43.1772277,id:"85",text:85e4},{lat:-22.983757,lng:-43.1986682,id:"94",text:15e5},{lat:-22.9369602,lng:-43.1775996,id:"90",text:95e4},{lat:-22.966082,lng:-43.18899769999996,id:"69",text:1185e3},{lat:-22.9362411,lng:-43.1850009,id:"92",text:12e5},{lat:-22.961293,lng:-43.218241,id:"88",text:895e3},{lat:-22.9837898,lng:-43.19356979999998,id:"80",text:1e6},{lat:-22.9717697,lng:-43.18636129999999,id:"83",text:105e4},{lat:-22.9746287,lng:-43.19011330000001,id:"81",text:72e4},{lat:-22.9841382,lng:-43.190887299999986,id:"87",text:15e5},{lat:-22.9858367,lng:-43.21370159999999,id:"95",text:2e7},{lat:-22.9910577,lng:-43.3009366,id:"52",text:58e5},{lat:-22.9813083,lng:-43.19266479999999,id:"82",text:12e5},{lat:-22.9847341,lng:-43.1936536,id:"104",text:165e4},{lat:-22.981379,lng:-43.205669,id:"103",text:19e5},{lat:-22.9822996,lng:-43.2038386,id:"112",text:1545e3},{lat:-22.9625068,lng:-43.17389179999999,id:"102",text:14e5},{lat:-22.9600117,lng:-43.2031126,id:"109",text:98e4},{lat:-23.9720949,lng:-46.3159834,id:"100",text:123e4},{lat:-22.9600117,lng:-43.2031126,id:"107",text:92e4},{lat:-22.983799,lng:-43.197536,id:"129",text:1442e3},{lat:-22.9872476,lng:-43.1901074,id:"130",text:265e4},{lat:-22.9817997,lng:-43.2086305,id:"127",text:23e5},{lat:-22.9398054,lng:-43.1801507,id:"125",text:84e4},{lat:-22.985048,lng:-43.19176280000001,id:"131",text:38e5},{lat:-22.9782241,lng:-43.1924238,id:"126",text:134e4},{lat:-22.9828488,lng:-43.21254279999999,id:"114",text:42e5},{lat:-22.96082179999999,lng:-43.2074777,id:"133",text:115e4},{lat:-22.9828153,lng:-43.20972099999999,id:"135",text:28e5},{lat:-22.97413179999999,lng:-43.2304566,id:"124",text:145e4},{lat:-22.977427,lng:-43.2274914,id:"122",text:22e5},{lat:-22.940947,lng:-43.17579899999999,id:"142",text:245e4},{lat:-22.9521983,lng:-43.1875839,id:"140",text:92e4},{lat:-22.9718878,lng:-43.2077073,id:"187",text:155e4},{lat:-22.9288503,lng:-43.17428,id:"139",text:16e5},{lat:-22.9769263,lng:-43.2290044,id:"136",text:23e5},{lat:-22.9835792,lng:-43.19053769999999,id:"144",text:29e5},{lat:-22.95706479999999,lng:-43.1915771,id:"178",text:85e4},{lat:-22.9776292,lng:-43.2285486,id:"137",text:23e5},{lat:-22.941858,lng:-43.192853,id:"181",text:15e5},{lat:-22.9384632,lng:-43.1955651,id:"185",text:1085e3},{lat:-22.965168,lng:-43.2010153,id:"180",text:38e5},{lat:-22.9821776,lng:-43.1999828,id:"179",text:13e5},{lat:-22.9531527,lng:-43.1866453,id:"184",text:18e5},{lat:-22.984756,lng:-43.21304300000001,id:"188",text:32e5},{lat:-22.9962633,lng:-43.2720962,id:"198",text:49e5},{lat:-22.965332,lng:-43.189002,id:"197",text:78e4},{lat:-22.9728969,lng:-43.2272833,id:"134",text:179e4},{lat:-22.987264,lng:-43.229971,id:"192",text:215e4},{lat:-22.967297,lng:-43.184519,id:"196",text:168e4},{lat:-22.93960359999999,lng:-43.1769661,id:"194",text:95e4},{lat:-22.979827,lng:-43.21901400000001,id:"191",text:206e4},{lat:-22.936552,lng:-43.1907049,id:"210",text:36e5},{lat:-22.974009,lng:-43.22941099999999,id:"204",text:42e5},{lat:-22.9846119,lng:-43.2318939,id:"222",text:375e4},{lat:-22.9709026,lng:-43.1856618,id:"214",text:103e4},{lat:-22.9503237,lng:-43.1773817,id:"208",text:22e5},{lat:-22.983944,lng:-43.1928399,id:"202",text:1261e3},{lat:-22.9323341,lng:-43.17647569999999,id:"215",text:95e4},{lat:-22.9392996,lng:-43.1777373,id:"206",text:94e4},{lat:-22.9730155,lng:-43.2047867,id:"251",text:158e4},{lat:-22.9642184,lng:-43.18172510000001,id:"207",text:134e4},{lat:-22.9667925,lng:-43.1856543,id:"71",text:18e5},{lat:-22.9741007,lng:-43.1931298,id:"211",text:103e4},{lat:-22.96607699999999,lng:-43.187534,id:"209",text:99e4},{lat:-22.966354,lng:-43.202437,id:"199",text:44e5},{lat:-22.9853376,lng:-43.19182259999999,id:"221",text:299e4},{lat:-22.9807355,lng:-43.21916179999999,id:"223",text:21e5},{lat:-22.9806269,lng:-43.2027641,id:"218",text:24e5},{lat:-22.9877057,lng:-43.22998750000001,id:"226",text:95e5},{lat:-22.93542,lng:-43.175303,id:"216",text:2e6},{lat:-22.935302,lng:-43.18676699999999,id:"217",text:85e4},{lat:-22.957992,lng:-43.194113,id:"230",text:92e4},{lat:-22.9623311,lng:-43.1699247,id:"229",text:9e5},{lat:-22.9436495,lng:-43.1915764,id:"220",text:125e4},{lat:-22.9803599,lng:-43.20297000000001,id:"291",text:89e4},{lat:-22.962191,lng:-43.168627,id:"113",text:165e4},{lat:-22.9841402,lng:-43.22846229999999,id:"237",text:39e5},{lat:-22.9606056,lng:-43.2013486,id:"240",text:125e4},{lat:-22.9818269,lng:-43.19039859999999,id:"247",text:4e6},{lat:-22.9384778,lng:-43.17529739999999,id:"238",text:15e5},{lat:-22.9782191,lng:-43.19053549999999,id:"245",text:129e4},{lat:-22.9783408,lng:-43.1899313,id:"242",text:122e4},{lat:-22.981283,lng:-43.22583300000001,id:"249",text:2e6},{lat:-22.964187,lng:-43.1926865,id:"292",text:135e4},{lat:-22.9854479,lng:-43.2038987,id:"264",text:15e5},{lat:-22.9436342,lng:-43.1602982,id:"213",text:14e5},{lat:-22.936318,lng:-43.1756702,id:"262",text:98e4},{lat:-22.9747273,lng:-43.18827739999999,id:"260",text:22e5},{lat:-22.984756,lng:-43.21304300000001,id:"265",text:28e5},{lat:-22.9368283,lng:-43.1773625,id:"252",text:12e5},{lat:-22.932436,lng:-43.182209,id:"293",text:87e4},{lat:-22.9497259,lng:-43.191109,id:"258",text:14e5},{lat:-22.95227629999999,lng:-43.1920265,id:"319",text:1655e3},{lat:-22.9862535,lng:-43.2085443,id:"274",text:38e5},{lat:-22.9828471,lng:-43.2190744,id:"106",text:125e4},{lat:-22.9364204,lng:-43.1772464,id:"205",text:8e5},{lat:-22.98536499999999,lng:-43.205812,id:"269",text:24e5},{lat:-22.9841693,lng:-43.1907905,id:"294",text:22e5},{lat:-22.98441279999999,lng:-43.1971263,id:"277",text:888e3},{lat:-22.9951318,lng:-43.25443139999999,id:"272",text:13e5},{lat:-22.961163,lng:-43.21866190000001,id:"243",text:965e3},{lat:-22.9636603,lng:-43.17526919999999,id:"300",text:138e4},{lat:-22.9740647,lng:-43.2295688,id:"286",text:26e5},{lat:-22.9397343,lng:-43.1784653,id:"234",text:12e5},{lat:-22.9595579,lng:-43.2052847,id:"278",text:27e5},{lat:-22.985993,lng:-43.209852,id:"279",text:63e5},{lat:-22.9813418,lng:-43.20087359999999,id:"282",text:285e4},{lat:-22.9989087,lng:-43.2403759,id:"287",text:995e3},{lat:-22.9646235,lng:-43.22099180000001,id:"285",text:1e6},{lat:-23.005915,lng:-43.283554,id:"200",text:45e5},{lat:-22.9681899,lng:-43.1867738,id:"302",text:14e5},{lat:-22.9832883,lng:-43.1942136,id:"301",text:3298e3},{lat:-22.9829472,lng:-43.2273167,id:"297",text:13e6},{lat:-22.9620608,lng:-43.1683987,id:"306",text:15e5},{lat:-22.962482,lng:-43.202303,id:"235",text:21e5},{lat:-22.9664361,lng:-43.2171113,id:"325",text:2e6},{lat:-22.984609,lng:-43.2111949,id:"309",text:408e4},{lat:-22.9740622,lng:-43.1879301,id:"310",text:14e5},{lat:-22.9687043,lng:-43.1874209,id:"281",text:18e5},{lat:-22.95227629999999,lng:-43.1920265,id:"320",text:106e4},{lat:-22.93780599999999,lng:-43.1740104,id:"315",text:82e4},{lat:-22.9755475,lng:-43.2276579,id:"317",text:125e4},{lat:-22.95227629999999,lng:-43.1920265,id:"321",text:227e4},{lat:-22.9802468,lng:-43.2023146,id:"336",text:38e5},{lat:-22.95227629999999,lng:-43.1920265,id:"331",text:3275e3},{lat:-22.9655772,lng:-43.2240566,id:"334",text:48e5},{lat:-22.9753872,lng:-43.19832710000001,id:"268",text:53e5},{lat:-22.9946524,lng:-43.25471029999999,id:"338",text:775e3}]},"./packages/ui-dom/components/Map/ClusterMarker/index.js":function(t,e,n){"use strict";function o(t){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var l,r=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,n):{};o.get||o.set?Object.defineProperty(e,n,o):e[n]=t[n]}return e.default=t,e}(n("./node_modules/react/index.js")),a=(l=n("./packages/ui-dom/components/Map/ClusterMarker/styles.js"))&&l.__esModule?l:{default:l};function i(t){return(i="function"===typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function d(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function s(t,e){return!e||"object"!==i(e)&&"function"!==typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function c(t,e){return(c=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),s(this,u(e).apply(this,arguments))}var n,o,l;return function(t,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&c(t,e)}(e,r.PureComponent),n=e,(o=[{key:"render",value:function(){var t=this.props,e=t.points,n=t.onClick,o=t.highlight;return r.default.createElement(a.default,{onClick:n&&n.bind(null,e),highlight:o},r.default.createElement("span",null,e.length))}}])&&d(n.prototype,o),l&&d(n,l),e}();e.default=p},"./packages/ui-dom/components/Map/ClusterMarker/styles.js":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,l=(o=n("./node_modules/styled-components/dist/styled-components.browser.esm.js"))&&o.__esModule?o:{default:o},r=n("./node_modules/styled-system/dist/index.esm.js");function a(){var t=function(t,e){e||(e=t.slice(0));return Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}(["\n  box-sizing: border-box;\n  width: 35px;\n  height: 35px;\n  margin-left: -10px;\n  text-align: center;\n  font-size: 14px;\n  color: #fff;\n  border: 2px solid #fff;\n  border-radius: 100%;\n  background-color: ",";\n  box-shadow: 1px 3px 6px rgba(0, 0, 0, 0.3);\n\n  > span {\n    box-sizing: border-box;\n    padding: 2px 0;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  ",";\n  :hover {\n    cursor: pointer;\n    color: ",";\n    background-color: white;\n  }\n"]);return a=function(){return t},t}var i=l.default.div(a(),(0,r.themeGet)("colors.pink"),function(t){var e=t.highlight,n=t.theme;return e?"background-color: white; color: ".concat(n.colors.pink,"; border: 2px solid ").concat(n.colors.pink,";"):""},(0,r.themeGet)("colors.pink"));e.default=i},"./packages/ui-dom/components/Map/Marker/index.js":function(t,e,n){"use strict";function o(t){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var l=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,n):{};o.get||o.set?Object.defineProperty(e,n,o):e[n]=t[n]}return e.default=t,e}(n("./node_modules/react/index.js")),r=i(n("./node_modules/classnames/index.js")),a=i(n("./packages/ui-dom/components/Map/Marker/styles.js"));function i(t){return t&&t.__esModule?t:{default:t}}function d(t){return(d="function"===typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function s(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function u(t,e){return!e||"object"!==d(e)&&"function"!==typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function p(t,e){return(p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var g=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,c(e).apply(this,arguments))}var n,o,i;return function(t,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}(e,l.PureComponent),n=e,(o=[{key:"render",value:function(){var t=this.props,e=t.id,n=t.lat,o=t.lng,i=t.children,d=t.onSelect,s=t.highlight,u=t.onClick,c=void 0===u?d?function(){return d(e)}:void 0:u,p=t.onMouseEnter,g=void 0===p?d?function(){return d(e,{lat:n,lng:o})}:void 0:p,f=t.onMouseLeave,m=void 0===f?d?function(){return d(e,{})}:void 0:f;return l.default.createElement(a.default,{onClick:c,onMouseEnter:g,onMouseLeave:m,lat:n,lng:o,className:(0,r.default)({highlight:s,text:"string"===typeof i,clickable:Boolean(c)})},i)}}])&&s(n.prototype,o),i&&s(n,i),e}();e.default=g},"./packages/ui-dom/components/Map/Marker/styles.js":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,l=(o=n("./node_modules/styled-components/dist/styled-components.browser.esm.js"))&&o.__esModule?o:{default:o},r=n("./node_modules/styled-system/dist/index.esm.js");function a(){var t=function(t,e){e||(e=t.slice(0));return Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}(["\n  background: ",";\n  color: white;\n  border-radius: 4px;\n  box-shadow: 1px 3px 6px rgba(0, 0, 0, 0.3);\n  font-size: 12px;\n  font-weight: 400;\n  margin-top: -6px;\n  padding: 3px 6px 4px;\n  position: absolute;\n  transform: translate(-50%, -100%)\n    scale(",");\n  transition: transform 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  z-index: ",";\n  &:after {\n    bottom: -6px;\n    content: '';\n    left: 50%;\n    position: absolute;\n    transform: translateX(-50%);\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 8px solid ",";\n  }\n  &:hover,\n  &.highlight {\n    z-index: 1;\n    cursor: grab;\n  }\n  &.clickable:hover {\n    cursor: pointer;\n  }\n  &.text:hover,\n  &.text.highlight {\n    background: white;\n    color: ",";\n    &:after {\n      border-top: 8px solid white;\n    }\n  }\n"]);return a=function(){return t},t}var i=l.default.div(a(),(0,r.themeGet)("colors.pink"),function(t){return t.highlight?1.3:1},function(t){return t.highlight?1:0},(0,r.themeGet)("colors.pink"),(0,r.themeGet)("colors.pink"));e.default=i},"./packages/ui-dom/components/Map/index.js":function(t,e,n){"use strict";function o(t){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var l=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,n):{};o.get||o.set?Object.defineProperty(e,n,o):e[n]=t[n]}return e.default=t,e}(n("./node_modules/react/index.js")),r=g(n("./node_modules/prop-types/index.js")),a=g(n("./node_modules/google-map-react/lib/index.js")),i=g(n("./node_modules/points-cluster/lib/index.js")),d=g(n("./node_modules/lodash/noop.js")),s=g(n("./node_modules/lodash/flatten.js")),u=g(n("./node_modules/lodash/isObject.js")),c=g(n("./packages/ui-dom/components/Map/Marker/index.js")),p=g(n("./packages/ui-dom/components/Map/ClusterMarker/index.js"));function g(t){return t&&t.__esModule?t:{default:t}}function f(t){return(f="function"===typeof Symbol&&"symbol"===o(Symbol.iterator)?function(t){return o(t)}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":o(t)})(t)}function m(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function x(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function y(t){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function h(t,e){return(h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function b(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function v(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var O={minZoom:7,maxZoom:17,radius:40},j=function(t,e){return e.mapOptions.bounds?(n=t,o=e,l=n.cluster,r=o.markers,a=o.mapOptions,(0,i.default)(r,(0,u.default)(l)?l:O)(a)).map(function(t){var e=t.wx,n=t.wy,o=t.numPoints,l=t.points;return{lat:n,lng:e,numPoints:o,id:"".concat(o,"_").concat(l[0].id),points:l}}):[];var n,o,l,r,a},_={Coordinates:r.default.shape({lat:r.default.number.isRequired,lng:r.default.number.isRequired}),SuperClusterOptions:r.default.shape({minZoom:r.default.number.isRequired,maxZoom:r.default.number.isRequired,radius:r.default.number.isRequired})},k=function(t){function e(){var t,n,o,r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var a=arguments.length,i=new Array(a),d=0;d<a;d++)i[d]=arguments[d];return o=this,r=(t=y(e)).call.apply(t,[this].concat(i)),v(b(b(n=!r||"object"!==f(r)&&"function"!==typeof r?b(o):r)),"state",{markers:void 0,clusters:void 0,mapOptions:{center:{lat:-22.9608099,lng:-43.2096142},zoom:8},hasAggregators:!1,loaded:!1}),v(b(b(n)),"onMapLoaded",function(t){var e=t.map,o=t.maps;if(e){var l=n.props,r=l.onDragEnd,a=l.onZoomChanged;n.setState({loaded:!0}),n.map=e,n.maps=o,n.fitMap(n.state.markers),r&&e.addListener("dragend",r),a&&e.addListener("zoom_changed",a)}}),v(b(b(n)),"onMapChange",function(t){var e=t.center,o=t.zoom,l=t.bounds;return n.setState({clusters:void 0,mapOptions:{center:e,zoom:o,bounds:l}},n.boundsUpdated)}),v(b(b(n)),"fitMap",function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.state.markers,e=t.map(function(t){return new n.maps.LatLng(t.lat,t.lng)}),o=new n.maps.LatLngBounds,l=0,r=e.length;l<r;l++)o.extend(e[l]);if(n.fitBounds(o),1===t.length&&n.setZoom(15),0===t.length){var a=n.state.mapOptions.center;n.setCenter(new n.maps.LatLng(a.lat,a.lng)),n.setZoom(13)}}),v(b(b(n)),"frameCluster",function(t){for(var e=n.props.onFrameCluster,o=t.map(function(t){return new n.maps.LatLng(t.lat,t.lng)}),l=new n.maps.LatLngBounds,r=0,a=o.length;r<a;r++)l.extend(o[r]);n.fitBounds(l),e&&e(l,t)}),v(b(b(n)),"createMapOptions",function(t){var e=n.props,o=e.createMapOptions,l=e.minZoom,r=e.maxZoom,a=e.defaultZoom,i=e.defaultCenter;return o?o(t):{defaultZoom:a,defaultCenter:i,maxZoom:r,minZoom:l,zoomControlOptions:{position:t.ControlPosition.RIGHT_TOP,style:t.ZoomControlStyle.SMALL},mapTypeControlOptions:{position:t.ControlPosition.TOP_RIGHT},mapTypeControl:!0}}),v(b(b(n)),"isMarkerHighlighted",function(t){var e=t.id,o=t.lat,l=t.lng,r=n.props,a=r.highlight,i=r.isHighlight;return"function"===typeof i?i({id:e,lat:o,lng:l}):!!a&&(a.lat==o&&a.lng==l)}),v(b(b(n)),"isClusterHighlighted",function(t){return t.points.filter(n.isMarkerHighlighted).length>0}),v(b(b(n)),"renderCluster",function(t){return l.default.createElement(p.default,{key:t.id,lat:t.lat,lng:t.lng,points:t.points,onClick:n.frameCluster,highlight:n.isClusterHighlighted(t)})}),v(b(b(n)),"renderClusterMarkers",function(t){return t.points.map(function(t){return l.default.cloneElement(t.node,{highlight:n.isMarkerHighlighted(t)})})}),n}var n,o,r;return function(t,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(e,l.PureComponent),n=e,r=[{key:"getDerivedStateFromProps",value:function(t,e){var n,o=e.markers,r=e.clusters,a=e.hasAggregators,i=e.children!==t.children||!e.markers;return i&&(n=t.children,o=l.default.Children.map(n,function(t){return l.default.isValidElement(t)&&{node:t,id:t.props.id,lat:t.props.lat,lng:t.props.lng}}).filter(Boolean)),!t.cluster||!i&&e.clusters||(a=(r=j(t,function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},o=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),o.forEach(function(e){v(t,e,n[e])})}return t}({},e,{markers:o}))).reduce(function(t,e){return e.numPoints>1?t+1:t},0)>=1),{children:t.children,markers:o,clusters:r,hasAggregators:a}}}],(o=[{key:"panTo",value:function(){for(var t,e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];return(t=this.map?this.map.panTo:d.default).call.apply(t,[this.map].concat(n))}},{key:"fitBounds",value:function(){for(var t,e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];return(t=this.map?this.map.fitBounds:d.default).call.apply(t,[this.map].concat(n))}},{key:"setCenter",value:function(){for(var t,e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];return(t=this.map?this.map.setCenter:d.default).call.apply(t,[this.map].concat(n))}},{key:"setZoom",value:function(){for(var t,e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];return(t=this.map?this.map.setZoom:d.default).call.apply(t,[this.map].concat(n))}},{key:"boundsUpdated",value:function(){var t=this.props.onChange,e=this.state,n=e.mapOptions,o=e.clusters;if(t){var l=o?(0,s.default)(o.filter(function(t){return 1===t.numPoints}).map(function(t){return m(t.points)})):[];t(n.bounds,l.map(function(t){return t.id}))}}},{key:"render",value:function(){var t=this.props,e=t.children,n=t.cluster,o=t.apiKey,r=t.defaultCenter,i=t.defaultZoom,d=this.state,s=d.hasAggregators,u=d.clusters;return l.default.createElement(a.default,{bootstrapURLKeys:{key:o,language:"pt-BR",region:"br"},defaultZoom:i,defaultCenter:r,options:this.createMapOptions,yesIWantToUseGoogleMapApiInternals:!0,onChange:this.onMapChange,onGoogleApiLoaded:this.onMapLoaded},n?u.map(s?this.renderCluster:this.renderClusterMarkers):e)}}])&&x(n.prototype,o),r&&x(n,r),e}();e.default=k,v(k,"Marker",c.default),v(k,"propTypes",{children:r.default.node.isRequired,apiKey:r.default.string,highlight:_.Coordinates,isHighlight:r.default.func,minZoom:r.default.number,maxZoom:r.default.number,defaultZoom:r.default.number.isRequired,defaultCenter:_.Coordinates.isRequired,createMapOptions:r.default.func,cluster:r.default.oneOfType([r.default.bool,_.SuperClusterOptions]),onChange:r.default.func,onDragEnd:r.default.func,onZoomChanged:r.default.func,onFrameCluster:r.default.func}),v(k,"defaultProps",{defaultCenter:{lat:-22.9608099,lng:-43.2096142},defaultZoom:8,minZoom:7,maxZoom:20})}}]);